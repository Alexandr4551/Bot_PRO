#!/usr/bin/env python3
"""
–ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –¢–ï–°–¢ –¢–û–ß–ù–û–°–¢–ò –†–ê–°–ß–ï–¢–ê –ë–ê–õ–ê–ù–°–ê
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –º–∞—Ç–µ–º–∞—Ç–∏–∫—É –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö LTCUSDT
"""

import json
from datetime import datetime
from virtual_trading.services.balance_manager import BalanceManager

def test_balance_accuracy():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ—Å—Ç—å —Ä–∞—Å—á–µ—Ç–∞ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    print("üßÆ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –¢–ï–°–¢ –†–ê–°–ß–ï–¢–ê –ë–ê–õ–ê–ù–°–ê")
    print("=" * 50)
    
    # –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ LTCUSDT –∏–∑ —Ä–µ–∞–ª—å–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏
    initial_balance = 10000.0
    position_size_percent = 2.0
    position_size_usd = 200.0  # 2% –æ—Ç 10000
    
    # –î–∞–Ω–Ω—ã–µ —Ä–µ–∞–ª—å–Ω–æ–π —Å–¥–µ–ª–∫–∏ LTCUSDT
    entry_price = 119.45
    tp1_price = 117.78
    tp2_price = 117.165  
    tp3_price = 116.96
    
    # –†–µ–∞–ª—å–Ω—ã–µ P&L –∏–∑ —Ñ–∞–π–ª–∞
    tp1_pnl = 1.3980745081624124
    tp2_pnl = 0.956467141063205
    tp3_pnl = 1.0422771033905438
    total_expected_pnl = tp1_pnl + tp2_pnl + tp3_pnl
    
    print(f"üìä –ò–°–•–û–î–ù–´–ï –î–ê–ù–ù–´–ï:")
    print(f"   –ë–∞–ª–∞–Ω—Å: ${initial_balance:,.2f}")
    print(f"   –†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏: ${position_size_usd:.2f} ({position_size_percent}%)")
    print(f"   –í—Ö–æ–¥: ${entry_price:.2f}")
    print(f"   TP1: ${tp1_price:.2f} ‚Üí P&L: ${tp1_pnl:+.2f}")
    print(f"   TP2: ${tp2_price:.2f} ‚Üí P&L: ${tp2_pnl:+.2f}")
    print(f"   TP3: ${tp3_price:.2f} ‚Üí P&L: ${tp3_pnl:+.2f}")
    print(f"   –û–∂–∏–¥–∞–µ–º—ã–π –æ–±—â–∏–π P&L: ${total_expected_pnl:+.2f}")
    
    # –°–æ–∑–¥–∞–µ–º BalanceManager
    balance_manager = BalanceManager(
        initial_balance=initial_balance,
        position_size_percent=position_size_percent,
        max_exposure_percent=20.0
    )
    
    print(f"\nüîß –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø BALANCE MANAGER:")
    print(f"   –î–æ—Å—Ç—É–ø–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${balance_manager.available_balance:,.2f}")
    print(f"   –†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏: ${balance_manager.position_size_usd:.2f}")
    print(f"   –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ: ${balance_manager.total_invested:.2f}")
    print(f"   –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π P&L: ${balance_manager.total_realized_pnl:.2f}")
    
    # –®–∞–≥ 1: –†–µ–∑–µ—Ä–≤–∏—Ä—É–µ–º —Å—Ä–µ–¥—Å—Ç–≤–∞ –¥–ª—è –ø–æ–∑–∏—Ü–∏–∏
    print(f"\nüì• –®–ê–ì 1: –†–ï–ó–ï–†–í–ò–†–û–í–ê–ù–ò–ï –°–†–ï–î–°–¢–í")
    reserved = balance_manager.reserve_funds(position_size_usd)
    print(f"   –ó–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–æ: ${position_size_usd:.2f} ‚Üí {reserved}")
    print(f"   –î–æ—Å—Ç—É–ø–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${balance_manager.available_balance:.2f}")
    print(f"   –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ: ${balance_manager.total_invested:.2f}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è
    expected_available = initial_balance - position_size_usd
    if abs(balance_manager.available_balance - expected_available) > 0.01:
        print(f"   ‚ùå –û–®–ò–ë–ö–ê: –¥–æ—Å—Ç—É–ø–Ω—ã–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å ${expected_available:.2f}")
        return False
    
    # –®–∞–≥ 2: –ß–∞—Å—Ç–∏—á–Ω—ã–µ –∑–∞–∫—Ä—ã—Ç–∏—è TP1, TP2, TP3
    print(f"\nüí∞ –®–ê–ì 2: –ß–ê–°–¢–ò–ß–ù–´–ï –ó–ê–ö–†–´–¢–ò–Ø")
    
    # TP1 (50%)
    tp1_amount = position_size_usd * 0.5  # 50% = $100
    balance_manager.release_funds(tp1_amount, tp1_pnl)
    print(f"   TP1: ${tp1_amount:.2f} + P&L ${tp1_pnl:+.2f}")
    print(f"   –î–æ—Å—Ç—É–ø–Ω—ã–π: ${balance_manager.available_balance:.2f}")
    print(f"   –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ: ${balance_manager.total_invested:.2f}")
    print(f"   –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π P&L: ${balance_manager.total_realized_pnl:.2f}")
    
    # TP2 (25%)
    tp2_amount = position_size_usd * 0.25  # 25% = $50
    balance_manager.release_funds(tp2_amount, tp2_pnl)
    print(f"   TP2: ${tp2_amount:.2f} + P&L ${tp2_pnl:+.2f}")
    print(f"   –î–æ—Å—Ç—É–ø–Ω—ã–π: ${balance_manager.available_balance:.2f}")
    print(f"   –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ: ${balance_manager.total_invested:.2f}")
    print(f"   –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π P&L: ${balance_manager.total_realized_pnl:.2f}")
    
    # TP3 (25%)
    tp3_amount = position_size_usd * 0.25  # 25% = $50
    balance_manager.release_funds(tp3_amount, tp3_pnl)
    print(f"   TP3: ${tp3_amount:.2f} + P&L ${tp3_pnl:+.2f}")
    print(f"   –î–æ—Å—Ç—É–ø–Ω—ã–π: ${balance_manager.available_balance:.2f}")
    print(f"   –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ: ${balance_manager.total_invested:.2f}")
    print(f"   –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π P&L: ${balance_manager.total_realized_pnl:.2f}")
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    print(f"\nüéØ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê:")
    final_balance = balance_manager.available_balance
    expected_final = initial_balance + total_expected_pnl
    
    print(f"   –§–∏–Ω–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${final_balance:.2f}")
    print(f"   –û–∂–∏–¥–∞–µ–º—ã–π –±–∞–ª–∞–Ω—Å: ${expected_final:.2f}")
    print(f"   –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ: ${abs(final_balance - expected_final):.6f}")
    print(f"   –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π P&L: ${balance_manager.total_realized_pnl:.2f}")
    print(f"   –û–∂–∏–¥–∞–µ–º—ã–π P&L: ${total_expected_pnl:.2f}")
    print(f"   –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ: ${balance_manager.total_invested:.2f} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 0)")
    
    # –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
    validation = balance_manager.validate_state()
    print(f"\n‚úÖ –í–ê–õ–ò–î–ê–¶–ò–Ø –°–û–°–¢–û–Ø–ù–ò–Ø:")
    print(f"   –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∞–ª–∏–¥–Ω–æ: {validation['is_valid']}")
    if validation['issues']:
        for issue in validation['issues']:
            print(f"   ‚ùå {issue}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ—á–Ω–æ—Å—Ç–∏
    balance_accurate = abs(final_balance - expected_final) < 0.000001  # 1 –º–∏–∫—Ä–æ—Ü–µ–Ω—Ç
    pnl_accurate = abs(balance_manager.total_realized_pnl - total_expected_pnl) < 0.000001
    invested_zero = abs(balance_manager.total_invested) < 0.000001
    
    print(f"\nüîç –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò:")
    print(f"   ‚úÖ –ë–∞–ª–∞–Ω—Å —Ç–æ—á–Ω—ã–π: {balance_accurate}")
    print(f"   ‚úÖ P&L —Ç–æ—á–Ω—ã–π: {pnl_accurate}")
    print(f"   ‚úÖ –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ = 0: {invested_zero}")
    print(f"   ‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∞–ª–∏–¥–Ω–æ: {validation['is_valid']}")
    
    all_passed = balance_accurate and pnl_accurate and invested_zero and validation['is_valid']
    
    if all_passed:
        print(f"\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –†–ê–°–ß–ï–¢ –ë–ê–õ–ê–ù–°–ê –¢–û–ß–ù–´–ô!")
        return True
    else:
        print(f"\n‚ùå –ù–ê–ô–î–ï–ù–´ –û–®–ò–ë–ö–ò –í –†–ê–°–ß–ï–¢–ï –ë–ê–õ–ê–ù–°–ê!")
        return False

if __name__ == "__main__":
    test_balance_accuracy()